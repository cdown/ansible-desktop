---
- hosts: localhost
  connection: local

  vars:
    kernel: linux-lts
    default_kernel_params: 'cgroup_no_v1=all audit=0 swiotlb=4096'
    extra_kernel_params: ''
    boot_mode: uefi
    root_on_ssd: true
    uses_hdd: false
    remote_server: false
    compile_server: false
    desktop: false
    cdown: true
    game_server: false
    xorg: false
    xorg_profile: ""
    server: true
    lowmem: false
    thinkpad: false
    steam: false
    vulkan_drivers: []
    arch: x86
    pacman_arch: auto
    cpu_microcode: intel-ucode
    carch: x86_64
    chost: x86_64-pc-linux-gnu
    extra_cflags: ""
    wireguard_users:
      # final_octet explicitly specified to avoid changing IPs if the list
      # changes. 1 is reserved for the server.
      - name: cdown
        final_octet: 2
      - name: cdown-phone
        final_octet: 3
      - name: lin-phone
        final_octet: 5
    force_ssh: false

    # WSL doesn't run with systemd. Genie may be possible for later, but for
    # now just omit it.
    systemd_init: true

    lang_env: true
    python_3_version: 3.8.2
    node_version: 12.13.0
    ruby_version: 3.1.0
    perl_version: 5.30.2

    users:
      - cdown
    quirks: []
    features: []

  vars_files:
    - "vars/{{ lookup('env', 'AS_CONFIG') }}.yml"

  tasks:
    # Conditional facts (not overrideable in vars)
    - set_fact:
        hdd_scheduler: bfq
        ssd_scheduler: none
      when: not server
    - set_fact:
        hdd_scheduler: mq-deadline
        ssd_scheduler: none
      when: server

    # Base (crit): things that cannot be altered by quirks

    - include_tasks: tasks/base/locale.yml
    - include_tasks: tasks/base/systemd.yml
      when: systemd_init
    - include_tasks: tasks/base/pacman.yml
    - include_tasks: tasks/base/users.yml
    - include_tasks: tasks/base/sudo.yml
    - include_tasks: tasks/base/packages.yml

    # Quirks (machine-specific workarounds)

    - include_tasks: tasks/quirks/{{ item }}.yml
      with_items: "{{ quirks }}"

    # Base: things wanted no matter what config is used

    - include_tasks: tasks/base/sysctl.yml
    - include_tasks: tasks/base/aur.yml
    # Must go before kernel, because we need fsck.<filesystem> for
    # mkinitcpio -P to pass
    - include_tasks: tasks/base/filesystem.yml
    - include_tasks: tasks/base/kernel.yml
      when: boot_mode  # if boot_mode is null, it's WSL or similar
    - include_tasks: tasks/base/core.yml
    - include_tasks: tasks/base/dotfiles.yml
      with_items: '{{ users }}'
      loop_control:
        loop_var: user
    - include_tasks: tasks/base/ssh.yml
      when: systemd_init
    - include_tasks: tasks/base/timers-pre.yml
      when: systemd_init
    - include_tasks: tasks/base/timers.yml
      with_items:
        - cache-updates
        - pacman-fy
        - vacuum-journals
      when: systemd_init
    - include_tasks: tasks/base/timers-remove.yml
      with_items:
        - clean-cache
      when: systemd_init
    - include_tasks: tasks/base/remove.yml

    # Boot

    - include_tasks: tasks/boot/{{ boot_mode }}.yml
      when: boot_mode != None

    # Remote only

    - include_tasks: tasks/server/{{ item }}.yml
      with_items:
        - nginx
        - munin
        - atop
      when: server

    # Local only

    - include_tasks: tasks/local_server/{{ item }}.yml
      with_items:
        - packages
        - scratch
      when: not remote_server and server

    # Compile server only

    - include_tasks: tasks/compile_server/{{ item }}.yml
      with_items:
        - packages
        - systemd
        - linux
      when: compile_server

    # Desktop only

    - include_tasks: tasks/desktop/{{ item }}.yml
      with_items:
        - packages
        - sound
        - fonts
      when: desktop

    - include_tasks: tasks/desktop/{{ item }}.yml
      with_items:
        - cfs
        - printscan
      when: desktop and systemd_init  # otherwise it's wsl or similar, so no need

    - include_tasks: tasks/desktop/{{ item }}.yml
      with_items:
        - xorg
      when: desktop and xorg

    - include_tasks: tasks/desktop/xorg-profiles/{{ xorg_profile }}.yml
      when: 'desktop and xorg and xorg_profile != ""'

    - include_tasks: tasks/desktop/{{ item }}.yml
      with_items:
        - cdown-packages
      when: desktop and cdown

    - include_tasks: tasks/desktop/{{ item }}.yml
      with_items:
        - steam
      when: desktop and steam

    # Langenv only
    - include_tasks: tasks/env/rustup.yml
      with_items: '{{ users }}'
      loop_control:
        loop_var: user
      when: lang_env
    - include_tasks: tasks/env/rbenv.yml
      with_items: '{{ users }}'
      loop_control:
        loop_var: user
      when: lang_env
    - include_tasks: tasks/env/pyenv.yml
      with_items: '{{ users }}'
      loop_control:
        loop_var: user
      when: lang_env
    - include_tasks: tasks/env/nodenv.yml
      with_items: '{{ users }}'
      loop_control:
        loop_var: user
      when: lang_env
    - include_tasks: tasks/env/plenv.yml
      with_items: '{{ users }}'
      loop_control:
        loop_var: user
      when: lang_env

    - include_tasks: tasks/env/lowmem.yml
      when: not lang_env and lowmem

    # Game server only

    - include_tasks: tasks/game_server/{{ item }}.yml
      with_items:
        - l4d2
      when: game_server

    # Features (one-off, small features with little impact on the system)

    - include_tasks: tasks/features/{{ item }}.yml
      with_items: "{{ features }}"

    # Currently unused: seedbox/

  handlers:
    - name: restart sshd
      service: name=sshd state=restarted
    - name: restart nginx
      service: name=nginx state=restarted
    - name: restart unbound
      service: name=unbound state=restarted
    - name: restart munin-node
      service: name=munin-node state=restarted
