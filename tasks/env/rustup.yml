---
- pacman: name=rustup

- shell: "rustup show | awk -F- '$1 ~ /^[a-z]+$/ { print $1 }'"
  become: yes
  become_user: "{{ user }}"
  register: rust_versions
  changed_when: false

- name: Install rust toolchains
  command: "rustup install {{ item }}"
  with_items:
    - stable
    - nightly
  become: yes
  become_user: "{{ user }}"
  when: 'item not in rust_versions.stdout_lines'

- name: Install cargo-which-nightly
  command: "cargo +stable install cargo-which-nightly"
  changed_when: false
  become: yes
  become_user: "{{ user }}"

- name: Find an appropriate nightly rust with the features we want
  command: cargo +stable which-nightly --set-default rustfmt clippy rust-analyzer
  register: nightly_ver
  become: yes
  become_user: "{{ user }}"

- shell: "cargo install --list | awk '$0 ~ /^[a-zA-Z]/ { print $1 }'"
  become: yes
  become_user: "{{ user }}"
  register: cargo_pkgs
  changed_when: false

- shell: "rustup component list --installed --toolchain nightly | awk -F- '{ print $1 }'"
  become: yes
  become_user: "{{ user }}"
  register: rustup_nightly_components
  changed_when: false

- shell: "rustup component list --installed --toolchain stable | awk -F- '{ print $1 }'"
  become: yes
  become_user: "{{ user }}"
  register: rustup_stable_components
  changed_when: false

- name: Install stable rustup components
  command: "rustup component add {{ item }} --toolchain stable"
  with_items:
    - rustfmt
    - clippy
    - rust-analyzer
  become: yes
  become_user: "{{ user }}"
  when: 'item not in rustup_stable_components.stdout_lines'

- name: Install nightly rustup components
  command: "rustup component add {{ item }} --toolchain nightly"
  with_items:
    - rustfmt
    - clippy
    - rust-analyzer
  become: yes
  become_user: "{{ user }}"
  when: 'item not in rustup_nightly_components.stdout_lines'

- name: Install rust utilities
  command: "cargo install {{ item }}"
  with_items:
    - hyperfine
    - ripgrep
    - cargo-update
    - cargo-edit
    - fd-find
    - hexyl
    - mack
    - git-trim
    - git-delta
    - cargo-msrv
    - cargo-release
    - battery-notify
    - cargo-expand
  become: yes
  become_user: "{{ user }}"
  when: 'item not in cargo_pkgs.stdout_lines'

- name: Install rust utilities (stable)
  command: "cargo +stable install {{ item }}"
  with_items:
    # Due to https://github.com/rust-lang/rust/issues/110682
    - samply
  become: yes
  become_user: "{{ user }}"
  when: 'item not in cargo_pkgs.stdout_lines'
