---
- name: Install plenv
  aur: name={{ item }} skip_installed=yes
  with_items:
    - plenv
    - perl-build
  become: yes
  become_user: makepkg

- name: Get list of Perls installed in plenv
  shell: "eval \"$(plenv init -)\" && plenv versions | sed 's/^..//' | awk '{ print $1 }'"
  register: plenv_versions
  become: yes
  become_user: "{{ user }}"
  changed_when: false

- name: Install Perls using plenv
  shell: "eval \"$(plenv init -)\" && plenv install {{ item }} && plenv global {{ item }}"
  with_items:
    - "{{ perl_version }}"
  become: yes
  become_user: "{{ user }}"
  when: 'item not in plenv_versions.stdout_lines'

- name: Get user home
  shell: "getent passwd {{ user }} | awk -F: '{ print $6 }'"
  register: user_home
  changed_when: false

- stat: "path={{ user_home.stdout }}/.plenv/versions/{{ perl_version }}/bin/cpanm"
  register: cpanm_installed

- name: Install cpanm
  shell: "eval \"$(plenv init -)\" && plenv shell {{ perl_version }} && plenv install-cpanm && plenv rehash"
  when: 'not cpanm_installed.stat.exists'
  become: yes
  become_user: "{{ user }}"

- name: Get list of installed gems
  shell: "eval \"$(plenv init -)\" && plenv shell {{ perl_version }} && cpan -l | awk '{ print $1 }'"
  register: plenv_gems
  become: yes
  become_user: "{{ user }}"
  changed_when: false

- name: Install perl utilities
  shell: 'eval "$(plenv init -)" && plenv shell {{ perl_version }} && cpanm -n {{ item }} && plenv rehash'
  with_items:
    # Irssi
    - DateTime
    # Image renamer
    - Image::ExifTool
    - App::cpanoutdated
    # ASCII trees from dot
    - Graph::Easy
  become: yes
  become_user: "{{ user }}"
  when: '(item|basename) not in plenv_gems.stdout_lines'
