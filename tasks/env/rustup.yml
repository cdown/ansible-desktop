---
- pacman: name=rustup
- pacman: name=mold

- shell: "rustup show | awk -F- '$1 ~ /^[a-z]+$/ { print $1 }'"
  become: yes
  become_user: "{{ user }}"
  register: rust_versions
  changed_when: false

- name: Install rust toolchains
  command: "rustup install {{ item }}"
  with_items:
    - stable
  become: yes
  become_user: "{{ user }}"
  when: 'item not in rust_versions.stdout_lines'

- name: Set default rust toolchain to stable
  command: "rustup default stable"
  become: yes
  become_user: "{{ user }}"
  changed_when: false

- shell: "cargo install --list | awk '$0 ~ /^[a-zA-Z]/ { print $1 }'"
  become: yes
  become_user: "{{ user }}"
  register: cargo_pkgs
  changed_when: false

- shell: "rustup component list --installed --toolchain stable | awk -F- '{ print $1 }'"
  become: yes
  become_user: "{{ user }}"
  register: rustup_stable_components
  changed_when: false

- name: Install stable rustup components
  command: "rustup component add {{ item }} --toolchain stable"
  with_items:
    - rustfmt
    - clippy
    - rust-analyzer
  become: yes
  become_user: "{{ user }}"
  when: 'item not in rustup_stable_components.stdout_lines'

- name: Install rust utilities
  command: "cargo install {{ item }}"
  with_items:
    - hyperfine
    - ripgrep
    - cargo-update
    - cargo-edit
    - fd-find
    - hexyl
    - mack
    - git-trim
    - git-delta
    - difftastic
    - cargo-msrv
    - cargo-release
    - battery-notify
    - cargo-expand
    - exifrename
    # Compile failure
    # - cargo-unused-features
    - tzupdate
    - cargo-watch
    - multidate
    - samply
    - cargo-sweep
  become: yes
  become_user: "{{ user }}"
  when: 'item not in cargo_pkgs.stdout_lines'
